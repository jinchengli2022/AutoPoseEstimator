ninja_required_version = 1.3
cxx = c++
nvcc = /usr/local/cuda/bin/nvcc

cflags = -pthread -B /root/miniconda3/envs/ljc/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -fPIC -O2 -isystem /root/miniconda3/envs/ljc/include -fPIC -O2 -isystem /root/miniconda3/envs/ljc/include -fPIC -I/root/miniconda3/envs/ljc/lib/python3.10/site-packages/torch/include -I/root/miniconda3/envs/ljc/lib/python3.10/site-packages/torch/include/torch/csrc/api/include -I/root/miniconda3/envs/ljc/lib/python3.10/site-packages/torch/include/TH -I/root/miniconda3/envs/ljc/lib/python3.10/site-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/local/include/eigen3 -I/usr/include/eigen3 -I/root/miniconda3/envs/ljc/include/eigen3 -I/root/miniconda3/envs/ljc/include/python3.10 -I/root/miniconda3/envs/ljc/include/python3.10 -c
post_cflags = -DTORCH_API_INCLUDE_EXTENSION_H '-DPYBIND11_COMPILER_TYPE="_gcc"' '-DPYBIND11_STDLIB="_libstdcpp"' '-DPYBIND11_BUILD_ABI="_cxxabi1011"' -DTORCH_EXTENSION_NAME=gridencoder -D_GLIBCXX_USE_CXX11_ABI=0 -std=c++17
cuda_cflags = -I/root/miniconda3/envs/ljc/lib/python3.10/site-packages/torch/include -I/root/miniconda3/envs/ljc/lib/python3.10/site-packages/torch/include/torch/csrc/api/include -I/root/miniconda3/envs/ljc/lib/python3.10/site-packages/torch/include/TH -I/root/miniconda3/envs/ljc/lib/python3.10/site-packages/torch/include/THC -I/usr/local/cuda/include -I/usr/local/include/eigen3 -I/usr/include/eigen3 -I/root/miniconda3/envs/ljc/include/eigen3 -I/root/miniconda3/envs/ljc/include/python3.10 -I/root/miniconda3/envs/ljc/include/python3.10 -c
cuda_post_cflags = -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options ''"'"'-fPIC'"'"'' -Xcompiler -O3 -std=c++17 -U__CUDA_NO_HALF_OPERATORS__ -U__CUDA_NO_HALF_CONVERSIONS__ -U__CUDA_NO_HALF2_OPERATORS__ -DTORCH_API_INCLUDE_EXTENSION_H '-DPYBIND11_COMPILER_TYPE="_gcc"' '-DPYBIND11_STDLIB="_libstdcpp"' '-DPYBIND11_BUILD_ABI="_cxxabi1011"' -DTORCH_EXTENSION_NAME=gridencoder -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_89,code=compute_89 -gencode=arch=compute_89,code=sm_89
cuda_dlink_post_cflags = 
ldflags = 

rule compile
  command = $cxx -MMD -MF $out.d $cflags -c $in -o $out $post_cflags
  depfile = $out.d
  deps = gcc

rule cuda_compile
  depfile = $out.d
  deps = gcc
  command = $nvcc --generate-dependencies-with-compile --dependency-output $out.d $cuda_cflags -c $in -o $out $cuda_post_cflags





build /Git/AutoPoseEstimator/Foundationpose/bundlesdf/mycuda/build/temp.linux-x86_64-cpython-310/Git/AutoPoseEstimator/Foundationpose/bundlesdf/mycuda/torch_ngp_grid_encoder/bindings.o: compile /Git/AutoPoseEstimator/Foundationpose/bundlesdf/mycuda/torch_ngp_grid_encoder/bindings.cpp
build /Git/AutoPoseEstimator/Foundationpose/bundlesdf/mycuda/build/temp.linux-x86_64-cpython-310/Git/AutoPoseEstimator/Foundationpose/bundlesdf/mycuda/torch_ngp_grid_encoder/gridencoder.o: cuda_compile /Git/AutoPoseEstimator/Foundationpose/bundlesdf/mycuda/torch_ngp_grid_encoder/gridencoder.cu






